r
q
r
bt
q
r
r smallGraph.txt 1 4 3
bt
q
r smallGraph.txt  1 4 2
br DFS
r smallGraph.txt  1 4 2
n
q
br DFS
r smallGraph.txt  1 4 2
n
n
q
q
br DFS
r smallGraph.txt  1 4 2
n
n
n
q
br DFS
r
r smallGraph.txt  1 4 2
n
print results
print results[i]
print results[vertex][i]
n
print graph[vertex][i]
print currentWeight
n
i
t
s
n
q
br DFS
r
n
br DFS
r smallGraph.txt  1 4 2
n
print graph[vertex][currentPath.back()]
n
q
br DFS
r smallGraph.txt  1 4 2
n
s
n
print graph[vertex][currentPath.back()]
currentPath.back()
print currentPath.back()
q
br DFS
r smallGraph.txt  1 4 2
n
print graph[vertex][currentPath.back()]
print graph[vertex][currentPath[currentPath.size()-2]
print graph[vertex][currentPath[currentPath.size()-2]]
print k
print currentWeight 
n
q
br DFS
r smallGraph.txt  1 4 2
n
print currentWeight 
q
r smallGraph.txt  1 4 2
r smallGraph.txt  1 4 1
q
br DFS
r smallGraph.txt  1 4 1
n
q
q
br dfs
br DFS
r smallGraph.txt  1 4 3
n
c
print finalPath 
c
print finalPath 
n
c
r smallGraph.txt  1 4 3
c print finalPath 
c & print finalPath 
c | print finalPath 
watch finalPath 
c
c
c
r smallGraph.txt  1 4 3
s
c
c
n
print currentPath 
n
print i
print visited
n
q
r largeGraph.txt 1 3 1
q
br DFS
r smallGraph.txt 1 4 3
n
print currentPath[currentPath.size()-2]
print currentPath.size()-2
q
br DFS
r
r smallGraph.txt 2 4 1
n
print currentPath 
print currentPath.size()-2
q
br DFS
r smallGraph.txt 2 4 1
n
print currentPath.size()-2 >= 0
q
r
n
q
br DFS
r smallGraph.txt 2 4 1
n
q
br DFS
r smallGraph.txt 2 4 1
n
n
n
print k
q
br DFS
r smallGraph.txt 2 4 1
n
print currentPath -1 < k
print currentPath - 1 < k
print currentPath.size() - 1 < k
q
br DFS
r smallGraph.txt 2 4 1
n
print k
n
print i
n
q
r
bt
:wq
q
br main
r
q
r smallGraph.txt  1 4 2
n
br DFS
c
n
q
br DFS
r
r smallGraph.txt  1 2 3
n
q
r
bt
r smallGraph.txt  1 2 3
q
r smallGraph.txt 1 3 1
q
q
r
r smallGraph.txt 1 4 2
n
r smallGraph.txt 1 4 2
print t
print kIndex
q
r smallGraph.txt 1 4 2
q
r smallGraph.txt 1 4 2
bt
:q
q
br DFS_Solution.cpp:162
r smallGraph.txt 1 4 3
print test.finalPath 
n 
print pathStack 
n
print pathStack 
n
q
br DFS_Solution.cpp:162
r smallGraph.txt 4 1 3
n
print pathStack 
n
print pathStack 
n
print pathStack 
print test.finalPath[k][1]
r smallGraph.txt 4 1 3
n
print pathStack 
print test.finalPath[k][1]
print test.finalPath[k-1][1]
q
br DFS_Solution.cpp:162
r smallGraph.txt 4 1 3
n
print k
r smallGraph.txt 4 1 1
n
print k
print pathStack 
print test.finalPath[k][0]
print test.finalPath[k-1][0]
q
r
bt
:wq
q
q
r
bt
br main
r
r smallGraph.txt 1 4 3
n
r smallGraph.txt 1 4 3
n
q
